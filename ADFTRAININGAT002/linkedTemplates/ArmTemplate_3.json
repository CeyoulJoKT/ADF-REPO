{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "ADFTRAININGAT002"
		},
		"SqlServer1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SqlServer1'",
			"defaultValue": "Integrated Security=True;Data Source=NIGHTFURY\\SQLEXPRESS02;Initial Catalog=test4"
		},
		"SqlServer1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'SqlServer1'"
		},
		"SqlServer2_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'SqlServer2'"
		},
		"SqlServer3_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'SqlServer3'"
		},
		"SqlServer4_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'SqlServer4'"
		},
		"SqlServer4ADV1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'SqlServer4ADV1'"
		},
		"SqlServer4ADV2_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'SqlServer4ADV2'"
		},
		"SqlServer5_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'SqlServer5'"
		},
		"SqlServer6_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'SqlServer6'"
		},
		"SqlServer7DIMST_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'SqlServer7DIMST'"
		},
		"SqlServer7Stage_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'SqlServer7Stage'"
		},
		"SqlServer1_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "NIGHTFURY\\ceyoul"
		},
		"SqlServer2_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "NIGHTFURY\\SQLEXPRESS02"
		},
		"SqlServer2_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "test3"
		},
		"SqlServer2_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "NIGHTFURY\\Ceyoul"
		},
		"SqlServer3_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "NIGHTFURY\\SQLEXPRESS02"
		},
		"SqlServer3_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "AdventureWorks2008R2LOCAL"
		},
		"SqlServer3_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "NIGHTFURY\\Ceyoul"
		},
		"SqlServer4_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "NIGHTFURY\\SQLEXPRESS02"
		},
		"SqlServer4_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "AdventureWorks2008R2LOCAL"
		},
		"SqlServer4_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "NIGHTFURY\\Ceyoul"
		},
		"SqlServer4ADV1_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "NIGHTFURY\\SQLEXPRESS02"
		},
		"SqlServer4ADV1_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "AdventureWorks2008R2LOCAL"
		},
		"SqlServer4ADV1_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "NIGHTFURY\\Ceyoul"
		},
		"SqlServer4ADV2_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "NIGHTFURY\\SQLEXPRESS02"
		},
		"SqlServer4ADV2_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "AdventureWorks2008R2LOCAL"
		},
		"SqlServer4ADV2_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "NIGHTFURY\\Ceyoul"
		},
		"SqlServer5_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "NIGHTFURY\\SQLEXPRESS02"
		},
		"SqlServer5_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "AdventureWorks2008R2LOCAL"
		},
		"SqlServer5_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "NIGHTFURY\\Ceyoul"
		},
		"SqlServer6_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "NIGHTFURY\\SQLEXPRESS02"
		},
		"SqlServer6_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "cars"
		},
		"SqlServer6_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "NIGHTFURY\\Ceyoul"
		},
		"SqlServer7DIMST_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "NIGHTFURY\\SQLEXPRESS02"
		},
		"SqlServer7DIMST_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "ADF_REF"
		},
		"SqlServer7DIMST_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "NIGHTFURY\\Ceyoul"
		},
		"SqlServer7Stage_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "NIGHTFURY\\SQLEXPRESS02"
		},
		"SqlServer7Stage_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "ADF_REF"
		},
		"SqlServer7Stage_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "NIGHTFURY\\Ceyoul"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Json3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage7",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "sample.json",
						"container": "testing"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"name": {
							"type": "string"
						},
						"language": {
							"type": "string"
						},
						"id": {
							"type": "string"
						},
						"bio": {
							"type": "string"
						},
						"version": {
							"type": "number"
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json4')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage7",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "sample.json",
						"container": "testing"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"dealership": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"location": {
									"type": "string"
								},
								"inventory": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"id": {
												"type": "string"
											},
											"make": {
												"type": "string"
											},
											"model": {
												"type": "string"
											},
											"year": {
												"type": "integer"
											},
											"specs": {
												"type": "object",
												"properties": {
													"engine": {
														"type": "string"
													},
													"transmission": {
														"type": "string"
													},
													"features": {
														"type": "array",
														"items": {
															"type": "string"
														}
													}
												}
											},
											"price": {
												"type": "integer"
											},
											"maintenanceRecords": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"date": {
															"type": "string"
														},
														"service": {
															"type": "string"
														},
														"details": {
															"type": "object",
															"properties": {
																"serviceCenter": {
																	"type": "string"
																},
																"mileage": {
																	"type": "integer"
																},
																"cost": {
																	"type": "number"
																}
															}
														}
													}
												}
											},
											"rentalInfo": {
												"type": "object",
												"properties": {
													"availability": {
														"type": "string"
													},
													"rentalRates": {
														"type": "object",
														"properties": {
															"daily": {
																"type": "integer"
															},
															"weekly": {
																"type": "integer"
															},
															"monthly": {
																"type": "integer"
															}
														}
													}
												}
											}
										}
									}
								},
								"staff": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"id": {
												"type": "string"
											},
											"name": {
												"type": "string"
											},
											"role": {
												"type": "string"
											},
											"contact": {
												"type": "object",
												"properties": {
													"email": {
														"type": "string"
													},
													"phone": {
														"type": "string"
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json5')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage7",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "sample.json",
						"container": "testing"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"dealership": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"location": {
									"type": "string"
								},
								"inventory": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"id": {
												"type": "string"
											},
											"make": {
												"type": "string"
											},
											"model": {
												"type": "string"
											},
											"year": {
												"type": "integer"
											},
											"specs": {
												"type": "object",
												"properties": {
													"engine": {
														"type": "string"
													},
													"transmission": {
														"type": "string"
													},
													"features": {
														"type": "array",
														"items": {
															"type": "string"
														}
													}
												}
											},
											"price": {
												"type": "integer"
											}
										}
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json6')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage8",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "JsonData.json",
						"container": "adftrainingst02"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"id": {
							"type": "integer"
						},
						"fullName": {
							"type": "string"
						},
						"country": {
							"type": "string"
						},
						"email": {
							"type": "string"
						},
						"phone": {
							"type": "string"
						},
						"accountCreated": {
							"type": "string"
						},
						"accounts": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"accountId": {
										"type": "integer"
									},
									"accountBalance": {
										"type": "integer"
									},
									"created": {
										"type": "string"
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Orc1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage7",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Orc",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "testing"
					},
					"enablePhysicalSchema": true
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestResource1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RestService4",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"id": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@dataset().id",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestResource2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RestService5",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestResource3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RestService6",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServer1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('SqlServer1_connectionString')]",
					"userName": "[parameters('SqlServer1_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SqlServer1_password')]"
					}
				},
				"connectVia": {
					"referenceName": "integrationRuntime1",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServer2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"server": "[parameters('SqlServer2_properties_typeProperties_server')]",
					"database": "[parameters('SqlServer2_properties_typeProperties_database')]",
					"encrypt": "optional",
					"trustServerCertificate": false,
					"authenticationType": "Windows",
					"userName": "[parameters('SqlServer2_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SqlServer2_password')]"
					}
				},
				"connectVia": {
					"referenceName": "integrationRuntime1",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServer3')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"server": "[parameters('SqlServer3_properties_typeProperties_server')]",
					"database": "[parameters('SqlServer3_properties_typeProperties_database')]",
					"encrypt": "optional",
					"trustServerCertificate": false,
					"authenticationType": "Windows",
					"userName": "[parameters('SqlServer3_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SqlServer3_password')]"
					}
				},
				"connectVia": {
					"referenceName": "integrationRuntime1",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServer4')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"server": "[parameters('SqlServer4_properties_typeProperties_server')]",
					"database": "[parameters('SqlServer4_properties_typeProperties_database')]",
					"encrypt": "optional",
					"trustServerCertificate": false,
					"authenticationType": "Windows",
					"userName": "[parameters('SqlServer4_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SqlServer4_password')]"
					}
				},
				"connectVia": {
					"referenceName": "integrationRuntime1",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServer4ADV1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"server": "[parameters('SqlServer4ADV1_properties_typeProperties_server')]",
					"database": "[parameters('SqlServer4ADV1_properties_typeProperties_database')]",
					"encrypt": "optional",
					"trustServerCertificate": false,
					"authenticationType": "Windows",
					"userName": "[parameters('SqlServer4ADV1_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SqlServer4ADV1_password')]"
					}
				},
				"connectVia": {
					"referenceName": "integrationRuntime1",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServer4ADV2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"server": "[parameters('SqlServer4ADV2_properties_typeProperties_server')]",
					"database": "[parameters('SqlServer4ADV2_properties_typeProperties_database')]",
					"encrypt": "optional",
					"trustServerCertificate": false,
					"authenticationType": "Windows",
					"userName": "[parameters('SqlServer4ADV2_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SqlServer4ADV2_password')]"
					}
				},
				"connectVia": {
					"referenceName": "integrationRuntime1",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServer5')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"server": "[parameters('SqlServer5_properties_typeProperties_server')]",
					"database": "[parameters('SqlServer5_properties_typeProperties_database')]",
					"encrypt": "optional",
					"trustServerCertificate": false,
					"authenticationType": "Windows",
					"userName": "[parameters('SqlServer5_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SqlServer5_password')]"
					}
				},
				"connectVia": {
					"referenceName": "integrationRuntime1",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServer6')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"server": "[parameters('SqlServer6_properties_typeProperties_server')]",
					"database": "[parameters('SqlServer6_properties_typeProperties_database')]",
					"encrypt": "optional",
					"trustServerCertificate": false,
					"authenticationType": "Windows",
					"userName": "[parameters('SqlServer6_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SqlServer6_password')]"
					}
				},
				"connectVia": {
					"referenceName": "integrationRuntime1",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServer7DIMST')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"server": "[parameters('SqlServer7DIMST_properties_typeProperties_server')]",
					"database": "[parameters('SqlServer7DIMST_properties_typeProperties_database')]",
					"encrypt": "optional",
					"trustServerCertificate": false,
					"authenticationType": "Windows",
					"userName": "[parameters('SqlServer7DIMST_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SqlServer7DIMST_password')]"
					}
				},
				"connectVia": {
					"referenceName": "integrationRuntime1",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServer7Stage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"server": "[parameters('SqlServer7Stage_properties_typeProperties_server')]",
					"database": "[parameters('SqlServer7Stage_properties_typeProperties_database')]",
					"encrypt": "optional",
					"trustServerCertificate": false,
					"authenticationType": "Windows",
					"userName": "[parameters('SqlServer7Stage_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SqlServer7Stage_password')]"
					}
				},
				"connectVia": {
					"referenceName": "integrationRuntime1",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Cleaning')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Drop Grade",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Truncate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "SqlServer7Stage",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "ALTER TABLE [dim].[students_data]\nDROP COLUMN Grade;"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "Truncate",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "SqlServer7Stage",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": " truncate table [dim].[Students_Data]\n truncate table [stage].[Students_Data]"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "Drop Average marks",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Drop Grade",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "SqlServer7Stage",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "ALTER TABLE [dim].[students_data]\nDROP COLUMN AverageMarks;\n"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "Drop TotalMarks",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Drop Average marks",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "SqlServer7Stage",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "ALTER TABLE [dim].[students_data]\nDROP COLUMN Totalmarks;"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Refresher"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServer7Stage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SP_INSERT_DELETE_UPDATE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Insertion",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[InsertStudentData]"
						},
						"linkedServiceName": {
							"referenceName": "SqlServer7Stage",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Deletion",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "30 Sec",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[DeleteStudentData]"
						},
						"linkedServiceName": {
							"referenceName": "SqlServer7Stage",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "30 Sec",
						"type": "Wait",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Insertion",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 30
						}
					},
					{
						"name": "20 sec",
						"type": "Wait",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Deletion",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 20
						}
					},
					{
						"name": "Update",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "20 sec",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[UpdateStudentData]"
						},
						"linkedServiceName": {
							"referenceName": "SqlServer7Stage",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "10 sec",
						"type": "Wait",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Update",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 10
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Refresher"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServer7Stage')]"
			]
		}
	]
}