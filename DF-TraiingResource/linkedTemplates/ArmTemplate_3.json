{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "DF-TraiingResource"
		},
		"SqlServer1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SqlServer1'",
			"defaultValue": "Integrated Security=True;Data Source=NIGHTFURY\\SQLEXPRESS02;Initial Catalog=test4"
		},
		"SqlServer1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'SqlServer1'"
		},
		"SqlServer2_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'SqlServer2'"
		},
		"SqlServer3_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'SqlServer3'"
		},
		"SqlServer4_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'SqlServer4'"
		},
		"SqlServer4ADV1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'SqlServer4ADV1'"
		},
		"SqlServer4ADV2_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'SqlServer4ADV2'"
		},
		"SqlServer5_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'SqlServer5'"
		},
		"SqlServer6_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'SqlServer6'"
		},
		"SqlServer7DIMST_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'SqlServer7DIMST'"
		},
		"SqlServer7Stage_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'SqlServer7Stage'"
		},
		"SqlServer1_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "NIGHTFURY\\ceyoul"
		},
		"SqlServer2_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "NIGHTFURY\\SQLEXPRESS02"
		},
		"SqlServer2_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "test3"
		},
		"SqlServer2_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "NIGHTFURY\\Ceyoul"
		},
		"SqlServer3_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "NIGHTFURY\\SQLEXPRESS02"
		},
		"SqlServer3_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "AdventureWorks2008R2LOCAL"
		},
		"SqlServer3_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "NIGHTFURY\\Ceyoul"
		},
		"SqlServer4_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "NIGHTFURY\\SQLEXPRESS02"
		},
		"SqlServer4_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "AdventureWorks2008R2LOCAL"
		},
		"SqlServer4_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "NIGHTFURY\\Ceyoul"
		},
		"SqlServer4ADV1_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "NIGHTFURY\\SQLEXPRESS02"
		},
		"SqlServer4ADV1_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "AdventureWorks2008R2LOCAL"
		},
		"SqlServer4ADV1_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "NIGHTFURY\\Ceyoul"
		},
		"SqlServer4ADV2_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "NIGHTFURY\\SQLEXPRESS02"
		},
		"SqlServer4ADV2_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "AdventureWorks2008R2LOCAL"
		},
		"SqlServer4ADV2_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "NIGHTFURY\\Ceyoul"
		},
		"SqlServer5_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "NIGHTFURY\\SQLEXPRESS02"
		},
		"SqlServer5_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "AdventureWorks2008R2LOCAL"
		},
		"SqlServer5_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "NIGHTFURY\\Ceyoul"
		},
		"SqlServer6_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "NIGHTFURY\\SQLEXPRESS02"
		},
		"SqlServer6_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "cars"
		},
		"SqlServer6_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "NIGHTFURY\\Ceyoul"
		},
		"SqlServer7DIMST_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "NIGHTFURY\\SQLEXPRESS02"
		},
		"SqlServer7DIMST_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "ADF_REF"
		},
		"SqlServer7DIMST_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "NIGHTFURY\\Ceyoul"
		},
		"SqlServer7Stage_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "NIGHTFURY\\SQLEXPRESS02"
		},
		"SqlServer7Stage_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "ADF_REF"
		},
		"SqlServer7Stage_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "NIGHTFURY\\Ceyoul"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/RestResource2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RestService5",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServer1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('SqlServer1_connectionString')]",
					"userName": "[parameters('SqlServer1_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SqlServer1_password')]"
					}
				},
				"connectVia": {
					"referenceName": "integrationRuntime1",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServer2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"server": "[parameters('SqlServer2_properties_typeProperties_server')]",
					"database": "[parameters('SqlServer2_properties_typeProperties_database')]",
					"encrypt": "optional",
					"trustServerCertificate": false,
					"authenticationType": "Windows",
					"userName": "[parameters('SqlServer2_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SqlServer2_password')]"
					}
				},
				"connectVia": {
					"referenceName": "integrationRuntime1",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServer3')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"server": "[parameters('SqlServer3_properties_typeProperties_server')]",
					"database": "[parameters('SqlServer3_properties_typeProperties_database')]",
					"encrypt": "optional",
					"trustServerCertificate": false,
					"authenticationType": "Windows",
					"userName": "[parameters('SqlServer3_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SqlServer3_password')]"
					}
				},
				"connectVia": {
					"referenceName": "integrationRuntime1",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServer4')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"server": "[parameters('SqlServer4_properties_typeProperties_server')]",
					"database": "[parameters('SqlServer4_properties_typeProperties_database')]",
					"encrypt": "optional",
					"trustServerCertificate": false,
					"authenticationType": "Windows",
					"userName": "[parameters('SqlServer4_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SqlServer4_password')]"
					}
				},
				"connectVia": {
					"referenceName": "integrationRuntime1",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServer4ADV1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"server": "[parameters('SqlServer4ADV1_properties_typeProperties_server')]",
					"database": "[parameters('SqlServer4ADV1_properties_typeProperties_database')]",
					"encrypt": "optional",
					"trustServerCertificate": false,
					"authenticationType": "Windows",
					"userName": "[parameters('SqlServer4ADV1_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SqlServer4ADV1_password')]"
					}
				},
				"connectVia": {
					"referenceName": "integrationRuntime1",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServer4ADV2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"server": "[parameters('SqlServer4ADV2_properties_typeProperties_server')]",
					"database": "[parameters('SqlServer4ADV2_properties_typeProperties_database')]",
					"encrypt": "optional",
					"trustServerCertificate": false,
					"authenticationType": "Windows",
					"userName": "[parameters('SqlServer4ADV2_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SqlServer4ADV2_password')]"
					}
				},
				"connectVia": {
					"referenceName": "integrationRuntime1",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServer5')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"server": "[parameters('SqlServer5_properties_typeProperties_server')]",
					"database": "[parameters('SqlServer5_properties_typeProperties_database')]",
					"encrypt": "optional",
					"trustServerCertificate": false,
					"authenticationType": "Windows",
					"userName": "[parameters('SqlServer5_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SqlServer5_password')]"
					}
				},
				"connectVia": {
					"referenceName": "integrationRuntime1",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServer6')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"server": "[parameters('SqlServer6_properties_typeProperties_server')]",
					"database": "[parameters('SqlServer6_properties_typeProperties_database')]",
					"encrypt": "optional",
					"trustServerCertificate": false,
					"authenticationType": "Windows",
					"userName": "[parameters('SqlServer6_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SqlServer6_password')]"
					}
				},
				"connectVia": {
					"referenceName": "integrationRuntime1",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServer7DIMST')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"server": "[parameters('SqlServer7DIMST_properties_typeProperties_server')]",
					"database": "[parameters('SqlServer7DIMST_properties_typeProperties_database')]",
					"encrypt": "optional",
					"trustServerCertificate": false,
					"authenticationType": "Windows",
					"userName": "[parameters('SqlServer7DIMST_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SqlServer7DIMST_password')]"
					}
				},
				"connectVia": {
					"referenceName": "integrationRuntime1",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServer7Stage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"server": "[parameters('SqlServer7Stage_properties_typeProperties_server')]",
					"database": "[parameters('SqlServer7Stage_properties_typeProperties_database')]",
					"encrypt": "optional",
					"trustServerCertificate": false,
					"authenticationType": "Windows",
					"userName": "[parameters('SqlServer7Stage_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SqlServer7Stage_password')]"
					}
				},
				"connectVia": {
					"referenceName": "integrationRuntime1",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Cleaning')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Drop Grade",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Truncate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "SqlServer7Stage",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "ALTER TABLE [dim].[students_data]\nDROP COLUMN Grade;"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "Truncate",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "SqlServer7Stage",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": " truncate table [dim].[Students_Data]\n truncate table [stage].[Students_Data]"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "Drop Average marks",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Drop Grade",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "SqlServer7Stage",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "ALTER TABLE [dim].[students_data]\nDROP COLUMN AverageMarks;\n"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "Drop TotalMarks",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Drop Average marks",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "SqlServer7Stage",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "ALTER TABLE [dim].[students_data]\nDROP COLUMN Totalmarks;"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Refresher"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServer7Stage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SP_INSERT_DELETE_UPDATE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Insertion",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[InsertStudentData]"
						},
						"linkedServiceName": {
							"referenceName": "SqlServer7Stage",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Deletion",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "30 Sec",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[DeleteStudentData]"
						},
						"linkedServiceName": {
							"referenceName": "SqlServer7Stage",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "30 Sec",
						"type": "Wait",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Insertion",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 30
						}
					},
					{
						"name": "20 sec",
						"type": "Wait",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Deletion",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 20
						}
					},
					{
						"name": "Update",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "20 sec",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[UpdateStudentData]"
						},
						"linkedServiceName": {
							"referenceName": "SqlServer7Stage",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "10 sec",
						"type": "Wait",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Update",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 10
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Refresher"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServer7Stage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Set Variable')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "id1",
							"value": "SELECT \n    -- Query 1: Basic Employee Details\n    e.employee_id AS employee_id,\n    e.name AS employee_name,\n    ISNULL(m.name, 'No Manager') AS manager_name,"
						}
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set variable6",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat(variables('id1'),variables('id3'),variables('id4'),variables('id5'),variables('id6'))",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlTable9",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Set variable3",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "id3",
							"value": {
								"value": "(SELECT COUNT(*) FROM Employee) AS total_employees,\n\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable4",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set variable3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "id4",
							"value": {
								"value": "d.department,\n    COUNT(*) AS department_employee_count,",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable5",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set variable4",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "id5",
							"value": {
								"value": "SUM(e.salary) AS department_total_salary,\n    AVG(e.salary) AS department_average_salary,",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable6",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set variable5",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "id6",
							"value": {
								"value": "(SELECT COUNT(*) FROM Employee r WHERE r.manager_id = e.employee_id) AS direct_reports_count\n\nFROM \n    Employee e\nLEFT JOIN \n    Employee m ON e.manager_id = m.employee_id\nLEFT JOIN \n    (\n        SELECT \n            department,\n            COUNT(*) AS department_employee_count\n        FROM \n            Employee\n        GROUP BY \n            department\n    ) d ON e.department = d.department\n\nGROUP BY \n    e.employee_id, e.name, m.name, d.department, e.salary\n\nORDER BY \n    e.employee_id;",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"id": {
						"type": "String"
					},
					"dealers": {
						"type": "String"
					},
					"id2": {
						"type": "String"
					},
					"id3": {
						"type": "String"
					},
					"id1": {
						"type": "String"
					},
					"id4": {
						"type": "String"
					},
					"id5": {
						"type": "String"
					},
					"id6": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Refresher"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Web-Get-all')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Filter1",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Web1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Web1').output.data",
								"type": "Expression"
							},
							"condition": {
								"value": "@lessOrEquals(item().id,10)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter1').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Stored procedure2",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[pr_webid]",
										"storedProcedureParameters": {
											"avatar": {
												"value": {
													"value": "@item.avatar",
													"type": "Expression"
												},
												"type": "String"
											},
											"email": {
												"value": {
													"value": "@item.email",
													"type": "Expression"
												},
												"type": "String"
											},
											"first_name": {
												"value": {
													"value": "@item.first_name",
													"type": "Expression"
												},
												"type": "String"
											},
											"id": {
												"value": {
													"value": "@item.id",
													"type": "Expression"
												},
												"type": "String"
											},
											"last_name": {
												"value": {
													"value": "@item.last_name",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "SqlServer1",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Web1",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "https://reqres.in/api/users?page=2"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "WebActivity"
				},
				"annotations": [],
				"lastPublishTime": "2024-05-28T07:31:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServer1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServer1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "CustomerID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CustomerName",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Customer1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServer1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerTable10')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServer6",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "Employee"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServer6')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerTable11')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServer2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Table_tablename": {
						"type": "string"
					},
					"Schema": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().Schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().Table_tablename",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServer2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerTable12')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServer7Stage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": "Stage",
					"table": "sample"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServer7Stage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerTable13')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServer7Stage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "StudentId",
						"type": "varchar"
					},
					{
						"name": "StudentCode",
						"type": "varchar"
					},
					{
						"name": "StudentName",
						"type": "varchar"
					},
					{
						"name": "date",
						"type": "date"
					},
					{
						"name": "language",
						"type": "varchar"
					},
					{
						"name": "Maths",
						"type": "int",
						"precision": 10
					},
					{
						"name": "physics",
						"type": "int",
						"precision": 10
					},
					{
						"name": "chemistry",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Computerscience",
						"type": "int",
						"precision": 10
					},
					{
						"name": "stageCreateddate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "CreatedBy",
						"type": "nvarchar"
					},
					{
						"name": "UpdatedDateTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "UpdatedBy",
						"type": "nvarchar"
					},
					{
						"name": "IsDeleted",
						"type": "bit"
					}
				],
				"typeProperties": {
					"schema": "dim",
					"table": "Students_Data"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServer7Stage')]"
			]
		}
	]
}